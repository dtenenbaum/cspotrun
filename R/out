> # to be run like this:
> # R CMD BATCH -q --vanilla --no-save --no-restore '--args a="somestr" b=c(2,5,6)' initenv.R log.txt
> 
> # arguments expected:
> # cmonkey.workdir - the directory where the cmonkey initialization will take place (data/ and progs/ must exist here)
> # organism - the three letter organism code
> # ratios.file - the name of the file containing the ratios
> # k.clust = the number of clusters (default 200)
> # parallel.cores = the number of cores
> # out.filename = the file to write the initialized environment to (the environment will be called 'e')
> 
> args = (commandArgs(TRUE))
> if (length(args) == 0) {
+     print("No arguments supplied")
+     q('no')
+ }
> 
> 
> 
> 
> for (i in 1:length(args)) {
+     eval(parse(text=args[[i]]))
+ }
> 
> if (!exists("k.clust")) {
+     k.clust <- 200
+ }
> 
> setwd(cmonkey.workdir)
> 
> ratios = read.delim(ratios.file, row.names=1)
> #dim(ratios)
> #colnames(ratios)
> #rownames(ratios)
> 
> library(cMonkey)
Loading cMonkey version 4.4.9 (Thu Apr  8 10:32:51 2010)
Copyright (C) David J Reiss, Institute for Systems Biology.
Please email dreiss@systemsbiology.org if you run into any issues.
> 
> plot.iters <- 0
> 
> cm.func.each.iter = function() {
+     # do nothing
+ }
> 
> e = new.env()
> 
> e$cm.func.each.iter <- cm.func.each.iter
> 
> e <- cmonkey.init(e, organism=organism, plot.iters=0, k.clust = k.clust, parallel.cores = parallel.cores)
organism =  chr "hpy"
plot.iters =  num 0
k.clust =  num 200
parallel.cores =  num 2
save.logfile ->  logi FALSE
Original ratios matrix is 819x57 
Filtering out nochange rows/cols from ratios matrix...
Filtered ratios matrix is 819x57 
Normalizing ratios matrix...
cog.org ->  chr "?"
rsat.species ->  chr "?"
n.iter ->  num 3000
n.clust.per.row ->  num 2
k.clust =  num 200
n.clust.per.col ->  num 133
resid.iters ->  num [1:1500] 1 3 5 7 9 11 13 15 17 19 ...
meme.iters ->  num [1:30] 100 200 300 400 500 600 700 800 900 1000 ...
mot.iters ->  num [1:291] 100 110 120 130 140 150 160 170 180 190 ...
net.iters ->  num [1:429] 1 8 15 22 29 36 43 50 57 64 ...
resid.scaling ->  num 1
resid.weights ->  Named num 1
 - attr(*, "names")= chr "ratios"
mot.scaling ->  num [1:1500] 0 0.000667 0.001334 0.002001 0.002668 ...
mot.weights ->  Named num 1
 - attr(*, "names")= chr "upstream"
net.scaling ->  num [1:1500] 0 0.000334 0.000667 0.001001 0.001334 ...
net.weights ->  Named num [1:2] 0.5 0.5
 - attr(*, "names")= chr [1:2] "string" "operons"
grouping.weights ->  num(0) 
plot.iters =  num 0
post.adjust ->  logi TRUE
parallel.cores =  num 2
pareto.adjust.scalings ->  logi TRUE
max.changes ->  Named num [1:2] 0.2 5
 - attr(*, "names")= chr [1:2] "rows" "cols"
merge.cutoffs ->  Named num [1:2] 0.3 0.975
 - attr(*, "names")= chr [1:2] "n" "cor"
fuzzy.index ->  num [1:3000] 0.749 0.748 0.747 0.746 0.745 ...
translation.tab ->  NULL
seed.method ->  Named chr [1:2] "net=string:5" "best"
 - attr(*, "names")= chr [1:2] "rows" "cols"
string.version ->  chr "v8.2"
cluster.rows.allowed ->  num [1:2] 3 70
n.motifs ->  num [1:2000] 1 1 1 1 1 1 1 1 1 1 ...
motif.width.range ->  num [1:2] 6 24
meme.addl.args ->  chr "-time 600 -dna -revcomp -maxsize 9999999 -nmotifs %1$d -evt 1e9 -minw %2$d -maxw %3$d -mod zoops"
mast.addl.args ->  chr "-ev 99999 -mev 99999 -mt 0.99 -seqp -remcorr"
meme.consensus ->  chr "compute"
meme.consensus.e.val.limit ->  num 0.1
motif.palindrome.option ->  chr "non"
uniquify.seqs ->  logi TRUE
remove.low.complexity.subseqs ->  logi TRUE
operon.shift ->  logi TRUE
meme.seqs.allowed ->  num [1:2] 3 70
bg.order ->  num 3
motif.upstream.search ->  num [1:2] -20 150
motif.upstream.scan ->  num [1:2] -30 250
meme.cmd ->  chr "progs/meme"
mast.cmd ->  chr "progs/mast"
rsat.urls ->  chr [1:3] "http://rsat.ccb.sickkids.ca/" "http://rsat.ulb.ac.be/rsat/" ...
stats.iters ->  num [1:601] 1 5 10 15 20 25 30 35 40 45 ...
cm.script.each.iter ->  chr "cm.script.each.iter.R"
date.run ->  chr "10 Apr 13 17:54:33"
cmonkey.version ->  chr "4.4.9"
time.started ->  chr "Tue Apr 13 17:54:33 2010"
cmonkey.filename ->  chr "cmonkey_4.4.9_hpy_819x57_10_Apr_13_17:54:33"
rnd.seed ->  int 1271206473
big.matrices ->  num 52428800
rsat.species ->  chr "Helicobacter_pylori_26695"
taxon.id ->  int 85962
cog.org ->  chr "Hpy"
Organism is hpy Hpy Helicobacter_pylori_26695 85962 
PARALLELIZING: 2 
Initializing genome info for organism hpy 
no.genome.info ->  logi FALSE
Organism taxon id: 85962 
Loading genome sequence, chromosome NC_000915.1 
Gathering all "standard" orf names and other synonyms for all probe names...
 ... HP0171 ... HP0376 ... HP0589 ... HP0766 ... HP0989 ... HP1154 ... HP1322 ... HP1555
Mean number of synonyms per probe: 5.189255 
Using operon predictions from MicrobesOnline...
Assuming gene names have common prefix 'HP'.
Loading EMBL STRING interaction links from local file data/Helicobacter_pylori_26695/string_links_FALSE_85962.tab 
Read in 0 STRING edges that pass cutoff (500); weight = 0.5 
Converting operon predictions into a network...
WARNING: no edges in network string ... skipping.
2979 edges, 1219 nodes in network operons 
190 probes have no nodes in operons network (but 629 do)
operons network filtered, symmetrized and uniquified: 5958 edges.
Pre-computing all upstream seqs for background distribution ( -30 250 )...
5 probes have no upstream sequence.
Pre-computing upstream residue bg distrib (order= 3 )...
Loading COG functional codes (for plotting), org. code Hpy : trying NCBI whog file...
621 genes have a COG code ( 198 do not)
Seeding clusters using methods: net=string:5 best 
INITIALIZATION IS COMPLETE.
Warning message:
Could not find gene start/stop for all input genes 
> save.image(out.filename)
> 
> proc.time()
   user  system elapsed 
 51.603  42.121  48.774 
